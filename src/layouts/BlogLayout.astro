---
import type { CollectionEntry } from 'astro:content'
import BaseLayout from './BaseLayout.astro'
import Header from '@/components/Header.astro'
import Footer from '@/components/Footer.astro'
import { Image } from 'astro:assets'
import FormattedDate from '@/components/blog/FormattedDate.astro'

type Props = CollectionEntry<'blog'>['data']

const { title, description, publicationDate, updateDate, heroImage } = Astro.props
const urlImage = `/src/assets/images/blog/${heroImage}`
---

<BaseLayout title={title} description={description}>
  <Header />
  <main>
    <article>
      <div class="hero-image">
        {
          heroImage && (
            <Image
              width={1080}
              height={1080}
              src={urlImage}
              alt={`Imagen del post: ${title}`}
            />
          )
        }
      </div>
      <div class="data">
        <p>
          {updateDate
            ? <FormattedDate date={updateDate} />
            : <FormattedDate date={publicationDate} />
          }
        </p>
        <h1>{title}</h1>

        <div class="separator"></div>
  
        <div class="content">
          <slot />
        </div>
      </div>
    </article>
  </main>
  <Footer />
</BaseLayout>

<style is:global>
  main {
    width: 90%;
    margin: 0 auto;
    margin-top: 5rem;
    margin-bottom: 2rem;
    /* overflow: hidden */
  }

  article {
    width: 100%;
  }

  h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    text-align: center;
  }

  h2 {
    font-size: 2rem;
    font-weight: 600;
    margin-top: 2rem;
  }

  h3 {
    font-size: 1.8rem;
    font-weight: 500;
    margin-top: 2rem;
  }

  h4 {
    font-size: 1.5rem;
    font-weight: 500;
    margin-top: 2rem;
  }

  h5 {
    font-size: 1.2rem;
    font-weight: 500;
    margin-top: 2rem;
  }

  ul {
    list-style: disc;
    padding-left: 2rem;
    font-size: 1.2rem;
  }

  p {
    font-size: 1rem;
    font-weight: 400;
    max-width: 70ch;
  }

  strong {
    color: var(--primary-100);
    font-weight: 700;
  }

  em {
    font-style: italic;
  }

  img {
    width: 100%;
    border-radius: 10px;

    box-shadow: 0px 19px 21px 5px rgba(0, 0, 0, 0.20);
  }

  pre {
    white-space: pre-wrap;
    overflow-x: auto;
    word-wrap: break-word;

    border-radius: 5px;
  }

  code {
    white-space: pre-wrap;
    word-wrap: break-word;

    display: block;
    width: 100%;
    padding: 1rem;
    background-color: var(--bg-200);
  }

  .data {
    margin-top: 2rem;

    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .separator {
    width: 100%;
    height: 1px;
    background-color: var(--text-100);
    margin-top: 2rem;
    margin-bottom: 2rem;
    opacity: 0.2;
  }

  .content {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .content p {
    /* max-width: 60ch; */
    font-size: 1.2rem;
  }

  @media (width >= 768px) {
    main {
      width: 70ch;
    }
  }
</style>
